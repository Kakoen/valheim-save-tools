plugins {
    id 'java-library'
    id 'maven-publish'
}

group rootProject.group
version rootProject.version

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.35'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.18'

    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.18'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.18'
    testRuntime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.35'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

publishing {
    //For CI, we only want to publish when the version ends with SNAPSHOT; we don't want to overwrite releases
    def onlyPublishSnapshotVersion = rootProject.hasProperty('onlyPublishSnapshotVersion')
    if(!onlyPublishSnapshotVersion || (onlyPublishSnapshotVersion && version.endsWith("-SNAPSHOT"))) {
        publications {
            valheimSaveToolsLib(MavenPublication) {
                from components.java
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/kakoen/valheim-save-tools"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_PACKAGES_WRITE_TOKEN")
            }
        }
    }
}